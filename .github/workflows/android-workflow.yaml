name: CI Workflow
# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  build-and-test:
    name: Build and run tests
    # Set the type of machine to run on, macOS is better for running Android emulators
    runs-on: macos-latest
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Java JDK
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Run unit tests
      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      # Run instrumentation tests
      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86
          profile: Nexus 6
          avd-name: test
          emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck --stacktrace

      # Upload build reports to GitHub Actions
      - name: Upload Reports
        uses: actions/upload-artifact@v1
        with:
          name: reports
          path: PennMobile/build/reports
  
  # If tests pass, generate and upload APK
  generate-apk:
    name: Generate apk
    runs-on: ubuntu-latest
    needs: build-and-test
    # Generate APK only if we are pushing to master
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate apk
        run: ./gradlew assembleDebug
      
      # Upload APK to GitHub Actions
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: build-output
          path: PennMobile/build/outputs/apk/debug/PennMobile-debug.apk
  code-cov:
    name: JaCoCo Code Coverage 
    runs-on: macos-latest
    steps: 
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Java JDK
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      
      # # Run JaCoCo, generate Test Report
      # - name: Check Code Coverage
      #   run: ./gradlew jacocoTestReport

        # Run instrumentation tests
      - name: Run JaCoCo Test Report
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86
          profile: Nexus 6
          avd-name: test
          emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew jacocoTestReport --stacktrace